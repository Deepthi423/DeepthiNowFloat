<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="31573" started-at="2019-05-22T11:28:09Z" finished-at="2019-05-22T11:28:40Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="31573" started-at="2019-05-22T11:28:09Z" finished-at="2019-05-22T11:28:40Z">
      <class name="tests.NewTest1">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.NewTest1@271053e1]" name="beforeMethod" is-config="true" duration-ms="18443" started-at="2019-05-22T12:28:09Z" finished-at="2019-05-22T12:28:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="displayKeyWords()[pri:0, instance:tests.NewTest1@271053e1]" name="displayKeyWords" duration-ms="12088" started-at="2019-05-22T12:28:27Z" finished-at="2019-05-22T12:28:39Z">
          <exception class="java.lang.ClassCastException">
            <message>
              <![CDATA[org.openqa.selenium.remote.RemoteWebElement cannot be cast to java.util.List]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ClassCastException: org.openqa.selenium.remote.RemoteWebElement cannot be cast to java.util.List
	at tests.NewTest1.displayKeyWords(NewTest1.java:38)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ClassCastException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- displayKeyWords -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.NewTest1@271053e1]" name="afterMethod" is-config="true" duration-ms="1002" started-at="2019-05-22T12:28:39Z" finished-at="2019-05-22T12:28:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- tests.NewTest1 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
